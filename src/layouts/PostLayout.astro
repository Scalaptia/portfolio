---
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { getLangFromUrl } from "@/i18n/utils";
import { getReadingTime } from "@/utils/readingTime";
import { getI18N } from "@/i18n/index";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const { frontmatter } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const content = await Astro.slots.render("default");
const readingTime = getReadingTime(content);

const dateFormat = lang === "es" ? "es-ES" : "en-US";
---

<html lang={lang} class="overflow-y-scroll">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- HTML Meta Tags -->
    <meta name="description" content=`${frontmatter.description}` />

    <!-- Facebook Meta Tags -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content=`${frontmatter.title}` />
    <meta property="og:description" content=`${frontmatter.description}` />
    <meta
      property="og:image"
      content="https://opengraph.b-cdn.net/production/images/bc3ec5c3-b0ac-4f65-a407-f43415d923bd.png?token=toKgoa0WWUGPwPCJ93wpmekkVfp0EeIpYyI3bZ2opy8&height=600&width=1200&expires=33279283116"
    />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="fernando.haroware.com" />
    <meta name="twitter:title" content=`${frontmatter.title}` />
    <meta name="twitter:description" content=`${frontmatter.description}` />
    <meta
      name="twitter:image"
      content="https://opengraph.b-cdn.net/production/images/bc3ec5c3-b0ac-4f65-a407-f43415d923bd.png?token=toKgoa0WWUGPwPCJ93wpmekkVfp0EeIpYyI3bZ2opy8&height=600&width=1200&expires=33279283116"
    />

    <!-- Meta Tags Generated via https://www.opengraph.xyz -->

    <!-- Google tag (gtag.js) -->
    <script
      type="text/partytown"
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-DDC5EB7Z2M"></script>
    <script type="text/partytown">
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-DDC5EB7Z2M");
    </script>

    <title>{frontmatter.title} | Fernando Haro</title>
    <link rel="icon" href="/logo.ico" type="image/x-icon" />
    <link rel="preload" href="/posts.css" as="style" />
    <link rel="stylesheet" href="/posts.css" />
    <link rel="preload" href="/fonts.css" as="style" />
    <link rel="stylesheet" href="/fonts.css" />

    <style>
      :root {
        scrollbar-gutter: stable;
      }
    </style>
  </head>

  <body
    class="min-h-screen flex flex-col items-center bg-background bg-noise bg-repeat"
  >
    <Header title="blog" hideLanguagePicker="true/" />

    <div class="relative w-full px-4 pb-8 max-w-[80ch]">
      <article class="w-full overflow-hidden">
        <header class="text-center mb-8 sm:mb-10">
          <h1
            class="font-ubuntu-mono font-extrabold text-3xl sm:text-5xl mb-4 sm:mb-6 leading-tight text-text"
          >
            {frontmatter.title}
          </h1>

          <p class="text-lg sm:text-xl text-text/80 mb-4 sm:mb-6">
            {frontmatter.description}
          </p>

          <div
            class="flex flex-wrap items-center justify-center gap-2 sm:gap-4 text-xs sm:text-sm text-text/60 mb-4 sm:mb-6"
          >
            <span>{frontmatter.author}</span>
            <span>•</span>
            <time datetime={frontmatter.date}>
              {
                (() => {
                  const date = new Date(frontmatter.date);
                  // Adding a day to fix the timezone issue
                  date.setDate(date.getDate() + 1);
                  return date.toLocaleDateString(dateFormat, {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  });
                })()
              }
            </time>
            <span>•</span>
            <span>{readingTime} {i18n.BLOG_MINUTES}</span>
          </div>

          <div class="flex flex-wrap justify-center gap-2">
            {
              frontmatter.tags.map((tag: string) => (
                <span class="text-white bg-text border-2 border-white px-4 py-1 text-sm font-ubuntu-mono font-extrabold">
                  {tag}
                </span>
              ))
            }
          </div>
        </header>

        <div class="w-full prose-sm sm:prose-base markdown-body text-text">
          <slot />
        </div>
      </article>
    </div>

    <Footer hideLanguagePicker="true/" />
  </body>

  <script>
    // Add target and rel attributes to all markdown links
    document.addEventListener("DOMContentLoaded", () => {
      const markdownLinks = document.querySelectorAll(".markdown-body a");
      markdownLinks.forEach((link) => {
        const href = link.getAttribute("href");
        // Check if the link is external
        if (href?.startsWith("http")) {
          link.setAttribute("target", "_blank");
          link.setAttribute("rel", "noopener noreferrer");
        }
      });
    });
  </script>
</html>
